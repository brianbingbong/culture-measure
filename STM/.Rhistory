tidy_myfiles
tidy_myfiles %>%
count(word, sort = TRUE)
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
View(ranking)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != "fujitsu")
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE, width = 0.1) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE, width = 0.1,  na.rm = TRUE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE, width = 0.5,  na.rm = TRUE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
View(myfiles)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles
View(tidy_myfiles)
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != "â")
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Fujitsu annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Flex annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
library(tidyverse)
library(dplyr)
library(readr)
library(readtext)
library(tidytext)
library(janeaustenr)
library(stm)
library(tidyverse)
library(dplyr)
library(readr)
library(readtext)
library(tidytext)
library(janeaustenr)
library(stm)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != "â")
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Ericsson annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
library(tidyverse)
library(dplyr)
library(readr)
library(readtext)
library(tidytext)
library(janeaustenr)
library(stm)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Huawei annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
library(tidyverse)
library(dplyr)
library(readr)
library(readtext)
library(tidytext)
library(janeaustenr)
library(stm)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â')
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Huawei annual reports from 2017-2020")
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Nokia annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
View(myfiles.df)
View(myfiles)
View(myfiles)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â')
tidy_myfiles
ranking <- tidy_myfiles %>%
count(word, sort = TRUE)
View(ranking)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Nokia annual reports from 2017-2020")
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in Samsung annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
myfiles.list = list.files(pattern="*-filtered.txt", full.names = FALSE)
myfiles <- lapply(myfiles.list, function(x) {
t <- readtext(x)
mutate(t, document = gsub( "-filtered.txt", "", x ))
}) %>%
bind_rows
View(myfiles)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word)
tidy_myfiles %>%
count(word, sort = TRUE)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â')
tidy_myfiles %>%
count(word, sort = TRUE)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â' && 'sap')
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â' || 'sap')
tidy_myfiles %>%
count(word, sort = TRUE)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â' | 'sap')
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != ('â','sap'))
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != ('â'&&'sap'))
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â' ||'sap')
tidy_myfiles %>%
count(word, sort = TRUE)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word == ('â' ||'sap'))
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word = ('â' ||'sap'))
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word = 'â' ||'sap')
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â' ||'sap')
tidy_myfiles %>%
count(word, sort = TRUE)
tidy_myfiles <- myfiles %>%
tidytext::unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
select(document, word) %>%
filter(word != 'â')%>%
filter(word != 'sap')
tidy_myfiles %>%
count(word, sort = TRUE)
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in SAP annual reports from 2017-2020")
myfiles_tf_idf <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
bind_tf_idf(word, document, n) %>%
arrange(-tf_idf) %>%
group_by(document) %>%
top_n(10) %>%
ungroup
myfiles_tf_idf %>%
mutate(word = reorder_within(word, tf_idf, document)) %>%
ggplot(aes(word, tf_idf, fill = document)) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ document, scales = "free", ncol = 4) +
scale_x_reordered() +
coord_flip() +
theme(strip.text=element_text(size=8)) +
labs(x = NULL, y = "tf-idf",
title = "Highest tf-idf words in SAP annual reports from 2017-2020")
library(quanteda)
dfm <- tidy_myfiles %>%
count(document, word, sort = TRUE) %>%
cast_dfm(document, word, n)
topic_model <- stm(dfm, K = 12,
verbose = FALSE, init.type = "Spectral")
labelTopics(topic_model)
